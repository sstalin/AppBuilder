--- 
inherit: 
    - android.widget.TextView
    - android.view.View
    - java.lang.Object
attributes: !java.util.LinkedHashMap
    checkMark: !java.util.LinkedHashMap
        name: "android:checkMark"
        method: setCheckMarkDrawable(int)
        methodName: setCheckMarkDrawable
        type: int
        explanation: Drawable used for the check mark graphic. 
    autoLink: !java.util.LinkedHashMap
        name: "android:autoLink"
        method: setAutoLinkMask(int)
        methodName: setAutoLinkMask
        type: int
        explanation: |
            Controls whether links such as urls and email addresses are
                     automatically found and converted to clickable links. 
        from: android.widget.TextView
    autoText: !java.util.LinkedHashMap
        name: "android:autoText"
        method: setKeyListener(KeyListener)
        methodName: setKeyListener
        type: KeyListener
        explanation: |
            If set, specifies that this TextView has a textual input method
                         and automatically corrects some common spelling errors. 
        from: android.widget.TextView
    bufferType: !java.util.LinkedHashMap
        name: "android:bufferType"
        method: "setText(CharSequence,TextView.BufferType)"
        methodName: setText
        type: "CharSequence,TextView.BufferType"
        explanation: Determines the minimum type that getText() will return. 
        from: android.widget.TextView
    capitalize: !java.util.LinkedHashMap
        name: "android:capitalize"
        method: setKeyListener(KeyListener)
        methodName: setKeyListener
        type: KeyListener
        explanation: |
            If set, specifies that this TextView has a textual input method
                         and should automatically capitalize what the user types. 
        from: android.widget.TextView
    cursorVisible: !java.util.LinkedHashMap
        name: "android:cursorVisible"
        method: setCursorVisible(boolean)
        methodName: setCursorVisible
        type: boolean
        explanation: Makes the cursor visible (the default) or invisible. 
        from: android.widget.TextView
    digits: !java.util.LinkedHashMap
        name: "android:digits"
        method: setKeyListener(KeyListener)
        methodName: setKeyListener
        type: KeyListener
        explanation: |
            If set, specifies that this TextView has a numeric input method
                         and that these specific characters are the ones that it will
                         accept. 
        from: android.widget.TextView
    drawableBottom: !java.util.LinkedHashMap
        name: "android:drawableBottom"
        method: "setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)"
        methodName: setCompoundDrawablesWithIntrinsicBounds
        type: "int,int,int,int"
        explanation: The drawable to be drawn below the text. 
        from: android.widget.TextView
    drawableEnd: !java.util.LinkedHashMap
        name: "android:drawableEnd"
        method: "setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int)"
        methodName: setCompoundDrawablesRelativeWithIntrinsicBounds
        type: "int,int,int,int"
        explanation: The drawable to be drawn to the end of the text. 
        from: android.widget.TextView
    drawableLeft: !java.util.LinkedHashMap
        name: "android:drawableLeft"
        method: "setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)"
        methodName: setCompoundDrawablesWithIntrinsicBounds
        type: "int,int,int,int"
        explanation: The drawable to be drawn to the left of the text. 
        from: android.widget.TextView
    drawablePadding: !java.util.LinkedHashMap
        name: "android:drawablePadding"
        method: setCompoundDrawablePadding(int)
        methodName: setCompoundDrawablePadding
        type: int
        explanation: The padding between the drawables and the text. 
        from: android.widget.TextView
    drawableRight: !java.util.LinkedHashMap
        name: "android:drawableRight"
        method: "setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)"
        methodName: setCompoundDrawablesWithIntrinsicBounds
        type: "int,int,int,int"
        explanation: The drawable to be drawn to the right of the text. 
        from: android.widget.TextView
    drawableStart: !java.util.LinkedHashMap
        name: "android:drawableStart"
        method: "setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int)"
        methodName: setCompoundDrawablesRelativeWithIntrinsicBounds
        type: "int,int,int,int"
        explanation: The drawable to be drawn to the start of the text. 
        from: android.widget.TextView
    drawableTop: !java.util.LinkedHashMap
        name: "android:drawableTop"
        method: "setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)"
        methodName: setCompoundDrawablesWithIntrinsicBounds
        type: "int,int,int,int"
        explanation: The drawable to be drawn above the text. 
        from: android.widget.TextView
    editorExtras: !java.util.LinkedHashMap
        name: "android:editorExtras"
        method: setInputExtras(int)
        methodName: setInputExtras
        type: int
        explanation: |
            Reference to an
                         <input-extras>
                         XML resource containing additional data to
                         supply to an input method, which is private to the implementation
                         of the input method. 
        from: android.widget.TextView
    ellipsize: !java.util.LinkedHashMap
        name: "android:ellipsize"
        method: setEllipsize(TextUtils.TruncateAt)
        methodName: setEllipsize
        type: TextUtils.TruncateAt
        explanation: |
            If set, causes words that are longer than the view is wide
                         to be ellipsized instead of broken in the middle. 
        from: android.widget.TextView
    ems: !java.util.LinkedHashMap
        name: "android:ems"
        method: setEms(int)
        methodName: setEms
        type: int
        explanation: Makes the TextView be exactly this many ems wide. 
        from: android.widget.TextView
    fontFamily: !java.util.LinkedHashMap
        name: "android:fontFamily"
        method: setTypeface(Typeface)
        methodName: setTypeface
        type: Typeface
        explanation: Font family (named by string) for the text. 
        from: android.widget.TextView
    freezesText: !java.util.LinkedHashMap
        name: "android:freezesText"
        method: setFreezesText(boolean)
        methodName: setFreezesText
        type: boolean
        explanation: |
            If set, the text view will include its current complete text
                         inside of its frozen icicle in addition to meta-data such as
                         the current cursor position. 
        from: android.widget.TextView
    gravity: !java.util.LinkedHashMap
        name: "android:gravity"
        method: setGravity(int)
        methodName: setGravity
        type: int
        explanation: |
            Specifies how to align the text by the view's x- and/or y-axis
                         when the text is smaller than the view. 
        from: android.widget.TextView
    height: !java.util.LinkedHashMap
        name: "android:height"
        method: setHeight(int)
        methodName: setHeight
        type: int
        explanation: Makes the TextView be exactly this many pixels tall. 
        from: android.widget.TextView
    hint: !java.util.LinkedHashMap
        name: "android:hint"
        method: setHint(int)
        methodName: setHint
        type: int
        explanation: Hint text to display when the text is empty. 
        from: android.widget.TextView
    imeActionId: !java.util.LinkedHashMap
        name: "android:imeActionId"
        method: "setImeActionLabel(CharSequence,int)"
        methodName: setImeActionLabel
        type: "CharSequence,int"
        explanation: |
            Supply a value for
                         EditorInfo.actionId
                         used when an input method is connected to the text view. 
        from: android.widget.TextView
    imeActionLabel: !java.util.LinkedHashMap
        name: "android:imeActionLabel"
        method: "setImeActionLabel(CharSequence,int)"
        methodName: setImeActionLabel
        type: "CharSequence,int"
        explanation: |
            Supply a value for
                         EditorInfo.actionLabel
                         used when an input method is connected to the text view. 
        from: android.widget.TextView
    imeOptions: !java.util.LinkedHashMap
        name: "android:imeOptions"
        method: setImeOptions(int)
        methodName: setImeOptions
        type: int
        explanation: |
            Additional features you can enable in an IME associated with an editor
                     to improve the integration with your application. 
        from: android.widget.TextView
    includeFontPadding: !java.util.LinkedHashMap
        name: "android:includeFontPadding"
        method: setIncludeFontPadding(boolean)
        methodName: setIncludeFontPadding
        type: boolean
        explanation: |
            Leave enough room for ascenders and descenders instead of
                         using the font ascent and descent strictly. 
        from: android.widget.TextView
    inputMethod: !java.util.LinkedHashMap
        name: "android:inputMethod"
        method: setKeyListener(KeyListener)
        methodName: setKeyListener
        type: KeyListener
        explanation: |
            If set, specifies that this TextView should use the specified
                         input method (specified by fully-qualified class name). 
        from: android.widget.TextView
    inputType: !java.util.LinkedHashMap
        name: "android:inputType"
        method: setRawInputType(int)
        methodName: setRawInputType
        type: int
        explanation: |
            The type of data being placed in a text field, used to help an
                     input method decide how to let the user enter text. 
        from: android.widget.TextView
    lineSpacingExtra: !java.util.LinkedHashMap
        name: "android:lineSpacingExtra"
        method: "setLineSpacing(float,float)"
        methodName: setLineSpacing
        type: "float,float"
        explanation: Extra spacing between lines of text. 
        from: android.widget.TextView
    lineSpacingMultiplier: !java.util.LinkedHashMap
        name: "android:lineSpacingMultiplier"
        method: "setLineSpacing(float,float)"
        methodName: setLineSpacing
        type: "float,float"
        explanation: "Extra spacing between lines of text, as a multiplier. "
        from: android.widget.TextView
    lines: !java.util.LinkedHashMap
        name: "android:lines"
        method: setLines(int)
        methodName: setLines
        type: int
        explanation: Makes the TextView be exactly this many lines tall. 
        from: android.widget.TextView
    linksClickable: !java.util.LinkedHashMap
        name: "android:linksClickable"
        method: setLinksClickable(boolean)
        methodName: setLinksClickable
        type: boolean
        explanation: |
            If set to false, keeps the movement method from being set
                         to the link movement method even if autoLink causes links
                         to be found. 
        from: android.widget.TextView
    marqueeRepeatLimit: !java.util.LinkedHashMap
        name: "android:marqueeRepeatLimit"
        method: setMarqueeRepeatLimit(int)
        methodName: setMarqueeRepeatLimit
        type: int
        explanation: The number of times to repeat the marquee animation. 
        from: android.widget.TextView
    maxEms: !java.util.LinkedHashMap
        name: "android:maxEms"
        method: setMaxEms(int)
        methodName: setMaxEms
        type: int
        explanation: Makes the TextView be at most this many ems wide. 
        from: android.widget.TextView
    maxHeight: !java.util.LinkedHashMap
        name: "android:maxHeight"
        method: setMaxHeight(int)
        methodName: setMaxHeight
        type: int
        explanation: Makes the TextView be at most this many pixels tall. 
        from: android.widget.TextView
    maxLength: !java.util.LinkedHashMap
        name: "android:maxLength"
        method: setFilters(InputFilter)
        methodName: setFilters
        type: InputFilter
        explanation: |
            Set an input filter to constrain the text length to the
                         specified number. 
        from: android.widget.TextView
    maxLines: !java.util.LinkedHashMap
        name: "android:maxLines"
        method: setMaxLines(int)
        methodName: setMaxLines
        type: int
        explanation: Makes the TextView be at most this many lines tall. 
        from: android.widget.TextView
    maxWidth: !java.util.LinkedHashMap
        name: "android:maxWidth"
        method: setMaxWidth(int)
        methodName: setMaxWidth
        type: int
        explanation: Makes the TextView be at most this many pixels wide. 
        from: android.widget.TextView
    minEms: !java.util.LinkedHashMap
        name: "android:minEms"
        method: setMinEms(int)
        methodName: setMinEms
        type: int
        explanation: Makes the TextView be at least this many ems wide. 
        from: android.widget.TextView
    minHeight: !java.util.LinkedHashMap
        name: "android:minHeight"
        method: setMinimumHeight(int)
        methodName: setMinimumHeight
        type: int
        explanation: Defines the minimum height of the view. 
        from: android.view.View
    minLines: !java.util.LinkedHashMap
        name: "android:minLines"
        method: setMinLines(int)
        methodName: setMinLines
        type: int
        explanation: Makes the TextView be at least this many lines tall. 
        from: android.widget.TextView
    minWidth: !java.util.LinkedHashMap
        name: "android:minWidth"
        method: setMinimumWidth(int)
        methodName: setMinimumWidth
        type: int
        explanation: Defines the minimum width of the view. 
        from: android.view.View
    numeric: !java.util.LinkedHashMap
        name: "android:numeric"
        method: setKeyListener(KeyListener)
        methodName: setKeyListener
        type: KeyListener
        explanation: "If set, specifies that this TextView has a numeric input method. "
        from: android.widget.TextView
    password: !java.util.LinkedHashMap
        name: "android:password"
        method: setTransformationMethod(TransformationMethod)
        methodName: setTransformationMethod
        type: TransformationMethod
        explanation: |
            Whether the characters of the field are displayed as
                         password dots instead of themselves. 
        from: android.widget.TextView
    phoneNumber: !java.util.LinkedHashMap
        name: "android:phoneNumber"
        method: setKeyListener(KeyListener)
        methodName: setKeyListener
        type: KeyListener
        explanation: |
            If set, specifies that this TextView has a phone number input
                         method. 
        from: android.widget.TextView
    privateImeOptions: !java.util.LinkedHashMap
        name: "android:privateImeOptions"
        method: setPrivateImeOptions(String)
        methodName: setPrivateImeOptions
        type: String
        explanation: |
            An addition content type description to supply to the input
                         method attached to the text view, which is private to the
                         implementation of the input method. 
        from: android.widget.TextView
    scrollHorizontally: !java.util.LinkedHashMap
        name: "android:scrollHorizontally"
        method: setHorizontallyScrolling(boolean)
        methodName: setHorizontallyScrolling
        type: boolean
        explanation: |
            Whether the text is allowed to be wider than the view (and
                         therefore can be scrolled horizontally). 
        from: android.widget.TextView
    selectAllOnFocus: !java.util.LinkedHashMap
        name: "android:selectAllOnFocus"
        method: setSelectAllOnFocus(boolean)
        methodName: setSelectAllOnFocus
        type: boolean
        explanation: |
            If the text is selectable, select it all when the view takes
                         focus. 
        from: android.widget.TextView
    shadowColor: !java.util.LinkedHashMap
        name: "android:shadowColor"
        method: "setShadowLayer(float,float,float,int)"
        methodName: setShadowLayer
        type: "float,float,float,int"
        explanation: Place a shadow of the specified color behind the text. 
        from: android.widget.TextView
    shadowDx: !java.util.LinkedHashMap
        name: "android:shadowDx"
        method: "setShadowLayer(float,float,float,int)"
        methodName: setShadowLayer
        type: "float,float,float,int"
        explanation: Horizontal offset of the shadow. 
        from: android.widget.TextView
    shadowDy: !java.util.LinkedHashMap
        name: "android:shadowDy"
        method: "setShadowLayer(float,float,float,int)"
        methodName: setShadowLayer
        type: "float,float,float,int"
        explanation: Vertical offset of the shadow. 
        from: android.widget.TextView
    shadowRadius: !java.util.LinkedHashMap
        name: "android:shadowRadius"
        method: "setShadowLayer(float,float,float,int)"
        methodName: setShadowLayer
        type: "float,float,float,int"
        explanation: Radius of the shadow. 
        from: android.widget.TextView
    singleLine: !java.util.LinkedHashMap
        name: "android:singleLine"
        method: setTransformationMethod(TransformationMethod)
        methodName: setTransformationMethod
        type: TransformationMethod
        explanation: |
            Constrains the text to a single horizontally scrolling line
                         instead of letting it wrap onto multiple lines, and advances
                         focus instead of inserting a newline when you press the
                         enter key. 
        from: android.widget.TextView
    text: !java.util.LinkedHashMap
        name: "android:text"
        method: "setText(CharSequence,TextView.BufferType)"
        methodName: setText
        type: "CharSequence,TextView.BufferType"
        explanation: Text to display. 
        from: android.widget.TextView
    textAllCaps: !java.util.LinkedHashMap
        name: "android:textAllCaps"
        method: setAllCaps(boolean)
        methodName: setAllCaps
        type: boolean
        explanation: Present the text in ALL CAPS. 
        from: android.widget.TextView
    textColor: !java.util.LinkedHashMap
        name: "android:textColor"
        method: setTextColor(int)
        methodName: setTextColor
        type: int
        explanation: Text color. 
        from: android.widget.TextView
    textColorHighlight: !java.util.LinkedHashMap
        name: "android:textColorHighlight"
        method: setHighlightColor(int)
        methodName: setHighlightColor
        type: int
        explanation: Color of the text selection highlight. 
        from: android.widget.TextView
    textColorHint: !java.util.LinkedHashMap
        name: "android:textColorHint"
        method: setHintTextColor(int)
        methodName: setHintTextColor
        type: int
        explanation: Color of the hint text. 
        from: android.widget.TextView
    textColorLink: !java.util.LinkedHashMap
        name: "android:textColorLink"
        method: setLinkTextColor(int)
        methodName: setLinkTextColor
        type: int
        explanation: Text color for links. 
        from: android.widget.TextView
    textScaleX: !java.util.LinkedHashMap
        name: "android:textScaleX"
        method: setTextScaleX(float)
        methodName: setTextScaleX
        type: float
        explanation: Sets the horizontal scaling factor for the text. 
        from: android.widget.TextView
    textSize: !java.util.LinkedHashMap
        name: "android:textSize"
        method: "setTextSize(int,float)"
        methodName: setTextSize
        type: "int,float"
        explanation: Size of the text. 
        from: android.widget.TextView
    textStyle: !java.util.LinkedHashMap
        name: "android:textStyle"
        method: setTypeface(Typeface)
        methodName: setTypeface
        type: Typeface
        explanation: "Style (bold, italic, bolditalic) for the text. "
        from: android.widget.TextView
    typeface: !java.util.LinkedHashMap
        name: "android:typeface"
        method: setTypeface(Typeface)
        methodName: setTypeface
        type: Typeface
        explanation: "Typeface (normal, sans, serif, monospace) for the text. "
        from: android.widget.TextView
    width: !java.util.LinkedHashMap
        name: "android:width"
        method: setWidth(int)
        methodName: setWidth
        type: int
        explanation: Makes the TextView be exactly this many pixels wide. 
        from: android.widget.TextView
    alpha: !java.util.LinkedHashMap
        name: "android:alpha"
        method: setAlpha(float)
        methodName: setAlpha
        type: float
        explanation: |
            alpha property of the view, as a value between 0 (completely transparent) and 1
                         (completely opaque). 
        from: android.view.View
    background: !java.util.LinkedHashMap
        name: "android:background"
        method: setBackgroundResource(int)
        methodName: setBackgroundResource
        type: int
        explanation: A drawable to use as the background. 
        from: android.view.View
    clickable: !java.util.LinkedHashMap
        name: "android:clickable"
        method: setClickable(boolean)
        methodName: setClickable
        type: boolean
        explanation: Defines whether this view reacts to click events. 
        from: android.view.View
    contentDescription: !java.util.LinkedHashMap
        name: "android:contentDescription"
        method: setContentDescription(CharSequence)
        methodName: setContentDescription
        type: CharSequence
        explanation: Defines text that briefly describes content of the view. 
        from: android.view.View
    drawingCacheQuality: !java.util.LinkedHashMap
        name: "android:drawingCacheQuality"
        method: setDrawingCacheQuality(int)
        methodName: setDrawingCacheQuality
        type: int
        explanation: Defines the quality of translucent drawing caches. 
        from: android.view.View
    fadeScrollbars: !java.util.LinkedHashMap
        name: "android:fadeScrollbars"
        method: setScrollbarFadingEnabled(boolean)
        methodName: setScrollbarFadingEnabled
        type: boolean
        explanation: Defines whether to fade out scrollbars when they are not in use. 
        from: android.view.View
    filterTouchesWhenObscured: !java.util.LinkedHashMap
        name: "android:filterTouchesWhenObscured"
        method: setFilterTouchesWhenObscured(boolean)
        methodName: setFilterTouchesWhenObscured
        type: boolean
        explanation: |
            Specifies whether to filter touches when the view's window is obscured by
                         another visible window. 
        from: android.view.View
    fitsSystemWindows: !java.util.LinkedHashMap
        name: "android:fitsSystemWindows"
        method: setFitsSystemWindows(boolean)
        methodName: setFitsSystemWindows
        type: boolean
        explanation: |
            Boolean internal attribute to adjust view layout based on
                         system windows such as the status bar. 
        from: android.view.View
    focusable: !java.util.LinkedHashMap
        name: "android:focusable"
        method: setFocusable(boolean)
        methodName: setFocusable
        type: boolean
        explanation: Boolean that controls whether a view can take focus. 
        from: android.view.View
    focusableInTouchMode: !java.util.LinkedHashMap
        name: "android:focusableInTouchMode"
        method: setFocusableInTouchMode(boolean)
        methodName: setFocusableInTouchMode
        type: boolean
        explanation: Boolean that controls whether a view can take focus while in touch mode. 
        from: android.view.View
    hapticFeedbackEnabled: !java.util.LinkedHashMap
        name: "android:hapticFeedbackEnabled"
        method: setHapticFeedbackEnabled(boolean)
        methodName: setHapticFeedbackEnabled
        type: boolean
        explanation: |
            Boolean that controls whether a view should have haptic feedback
                         enabled for events such as long presses. 
        from: android.view.View
    id: !java.util.LinkedHashMap
        name: "android:id"
        method: setId(int)
        methodName: setId
        type: int
        explanation: |
            Supply an identifier name for this view, to later retrieve it
                         with View.findViewById() or
                         Activity.findViewById(). 
        from: android.view.View
    importantForAccessibility: !java.util.LinkedHashMap
        name: "android:importantForAccessibility"
        method: setImportantForAccessibility(int)
        methodName: setImportantForAccessibility
        type: int
        explanation: |
            Controls how this View is important for accessibility which is if it fires
                         accessibility events and if it is reported to accessibility services that
                         query the screen. 
        from: android.view.View
    isScrollContainer: !java.util.LinkedHashMap
        name: "android:isScrollContainer"
        method: setScrollContainer(boolean)
        methodName: setScrollContainer
        type: boolean
        explanation: |
            Set this if the view will serve as a scrolling container, meaing
                         that it can be resized to shrink its overall window so that there
                         will be space for an input method. 
        from: android.view.View
    keepScreenOn: !java.util.LinkedHashMap
        name: "android:keepScreenOn"
        method: setKeepScreenOn(boolean)
        methodName: setKeepScreenOn
        type: boolean
        explanation: |
            Controls whether the view's window should keep the screen on
                         while visible. 
        from: android.view.View
    layerType: !java.util.LinkedHashMap
        name: "android:layerType"
        method: "setLayerType(int,Paint)"
        methodName: setLayerType
        type: "int,Paint"
        explanation: Specifies the type of layer backing this view. 
        from: android.view.View
    layoutDirection: !java.util.LinkedHashMap
        name: "android:layoutDirection"
        method: setLayoutDirection(int)
        methodName: setLayoutDirection
        type: int
        explanation: Defines the direction of layout drawing. 
        from: android.view.View
    longClickable: !java.util.LinkedHashMap
        name: "android:longClickable"
        method: setLongClickable(boolean)
        methodName: setLongClickable
        type: boolean
        explanation: Defines whether this view reacts to long click events. 
        from: android.view.View
    nextFocusDown: !java.util.LinkedHashMap
        name: "android:nextFocusDown"
        method: setNextFocusDownId(int)
        methodName: setNextFocusDownId
        type: int
        explanation: |
            Defines the next view to give focus to when the next focus is
                         FOCUS_DOWN
            
                         If the reference refers to a view that does not exist or is part
                         of a hierarchy that is invisible, a RuntimeException
                         will result when the reference is accessed. 
        from: android.view.View
    nextFocusForward: !java.util.LinkedHashMap
        name: "android:nextFocusForward"
        method: setNextFocusForwardId(int)
        methodName: setNextFocusForwardId
        type: int
        explanation: |
            Defines the next view to give focus to when the next focus is
                         FOCUS_FORWARD
            
                         If the reference refers to a view that does not exist or is part
                         of a hierarchy that is invisible, a RuntimeException
                         will result when the reference is accessed. 
        from: android.view.View
    nextFocusLeft: !java.util.LinkedHashMap
        name: "android:nextFocusLeft"
        method: setNextFocusLeftId(int)
        methodName: setNextFocusLeftId
        type: int
        explanation: |
            Defines the next view to give focus to when the next focus is
                         FOCUS_LEFT. 
        from: android.view.View
    nextFocusRight: !java.util.LinkedHashMap
        name: "android:nextFocusRight"
        method: setNextFocusRightId(int)
        methodName: setNextFocusRightId
        type: int
        explanation: |
            Defines the next view to give focus to when the next focus is
                         FOCUS_RIGHT
            
                         If the reference refers to a view that does not exist or is part
                         of a hierarchy that is invisible, a RuntimeException
                         will result when the reference is accessed. 
        from: android.view.View
    nextFocusUp: !java.util.LinkedHashMap
        name: "android:nextFocusUp"
        method: setNextFocusUpId(int)
        methodName: setNextFocusUpId
        type: int
        explanation: |
            Defines the next view to give focus to when the next focus is
                         FOCUS_UP
            
                         If the reference refers to a view that does not exist or is part
                         of a hierarchy that is invisible, a RuntimeException
                         will result when the reference is accessed. 
        from: android.view.View
    padding: !java.util.LinkedHashMap
        name: "android:padding"
        method: "setPaddingRelative(int,int,int,int)"
        methodName: setPaddingRelative
        type: "int,int,int,int"
        explanation: "Sets the padding, in pixels, of all four edges. "
        from: android.view.View
    paddingBottom: !java.util.LinkedHashMap
        name: "android:paddingBottom"
        method: "setPaddingRelative(int,int,int,int)"
        methodName: setPaddingRelative
        type: "int,int,int,int"
        explanation: "Sets the padding, in pixels, of the bottom edge; see padding. "
        from: android.view.View
    paddingEnd: !java.util.LinkedHashMap
        name: "android:paddingEnd"
        method: "setPaddingRelative(int,int,int,int)"
        methodName: setPaddingRelative
        type: "int,int,int,int"
        explanation: "Sets the padding, in pixels, of the end edge; see padding. "
        from: android.view.View
    paddingLeft: !java.util.LinkedHashMap
        name: "android:paddingLeft"
        method: "setPadding(int,int,int,int)"
        methodName: setPadding
        type: "int,int,int,int"
        explanation: "Sets the padding, in pixels, of the left edge; see padding. "
        from: android.view.View
    paddingRight: !java.util.LinkedHashMap
        name: "android:paddingRight"
        method: "setPadding(int,int,int,int)"
        methodName: setPadding
        type: "int,int,int,int"
        explanation: "Sets the padding, in pixels, of the right edge; see padding. "
        from: android.view.View
    paddingStart: !java.util.LinkedHashMap
        name: "android:paddingStart"
        method: "setPaddingRelative(int,int,int,int)"
        methodName: setPaddingRelative
        type: "int,int,int,int"
        explanation: "Sets the padding, in pixels, of the start edge; see padding. "
        from: android.view.View
    paddingTop: !java.util.LinkedHashMap
        name: "android:paddingTop"
        method: "setPaddingRelative(int,int,int,int)"
        methodName: setPaddingRelative
        type: "int,int,int,int"
        explanation: "Sets the padding, in pixels, of the top edge; see padding. "
        from: android.view.View
    requiresFadingEdge: !java.util.LinkedHashMap
        name: "android:requiresFadingEdge"
        method: setVerticalFadingEdgeEnabled(boolean)
        methodName: setVerticalFadingEdgeEnabled
        type: boolean
        explanation: Defines which edges should be faded on scrolling. 
        from: android.view.View
    rotation: !java.util.LinkedHashMap
        name: "android:rotation"
        method: setRotation(float)
        methodName: setRotation
        type: float
        explanation: "rotation of the view, in degrees. "
        from: android.view.View
    rotationX: !java.util.LinkedHashMap
        name: "android:rotationX"
        method: setRotationX(float)
        methodName: setRotationX
        type: float
        explanation: "rotation of the view around the x axis, in degrees. "
        from: android.view.View
    rotationY: !java.util.LinkedHashMap
        name: "android:rotationY"
        method: setRotationY(float)
        methodName: setRotationY
        type: float
        explanation: "rotation of the view around the y axis, in degrees. "
        from: android.view.View
    saveEnabled: !java.util.LinkedHashMap
        name: "android:saveEnabled"
        method: setSaveEnabled(boolean)
        methodName: setSaveEnabled
        type: boolean
        explanation: |
            If unset, no state will be saved for this view when it is being
                         frozen. 
        from: android.view.View
    scaleX: !java.util.LinkedHashMap
        name: "android:scaleX"
        method: setScaleX(float)
        methodName: setScaleX
        type: float
        explanation: scale of the view in the x direction. 
        from: android.view.View
    scaleY: !java.util.LinkedHashMap
        name: "android:scaleY"
        method: setScaleY(float)
        methodName: setScaleY
        type: float
        explanation: scale of the view in the y direction. 
        from: android.view.View
    scrollbarDefaultDelayBeforeFade: !java.util.LinkedHashMap
        name: "android:scrollbarDefaultDelayBeforeFade"
        method: setScrollBarDefaultDelayBeforeFade(int)
        methodName: setScrollBarDefaultDelayBeforeFade
        type: int
        explanation: Defines the delay in milliseconds that a scrollbar waits before fade out. 
        from: android.view.View
    scrollbarFadeDuration: !java.util.LinkedHashMap
        name: "android:scrollbarFadeDuration"
        method: setScrollBarFadeDuration(int)
        methodName: setScrollBarFadeDuration
        type: int
        explanation: Defines the delay in milliseconds that a scrollbar takes to fade out. 
        from: android.view.View
    scrollbarSize: !java.util.LinkedHashMap
        name: "android:scrollbarSize"
        method: setScrollBarSize(int)
        methodName: setScrollBarSize
        type: int
        explanation: Sets the width of vertical scrollbars and height of horizontal scrollbars. 
        from: android.view.View
    scrollbarStyle: !java.util.LinkedHashMap
        name: "android:scrollbarStyle"
        method: setScrollBarStyle(int)
        methodName: setScrollBarStyle
        type: int
        explanation: Controls the scrollbar style and position. 
        from: android.view.View
    soundEffectsEnabled: !java.util.LinkedHashMap
        name: "android:soundEffectsEnabled"
        method: setSoundEffectsEnabled(boolean)
        methodName: setSoundEffectsEnabled
        type: boolean
        explanation: |
            Boolean that controls whether a view should have sound effects
                         enabled for events such as clicking and touching. 
        from: android.view.View
    textAlignment: !java.util.LinkedHashMap
        name: "android:textAlignment"
        method: setTextAlignment(int)
        methodName: setTextAlignment
        type: int
        explanation: Alignment of the text. 
        from: android.view.View
    transformPivotX: !java.util.LinkedHashMap
        name: "android:transformPivotX"
        method: setPivotX(float)
        methodName: setPivotX
        type: float
        explanation: x location of the pivot point around which the view will rotate and scale. 
        from: android.view.View
    transformPivotY: !java.util.LinkedHashMap
        name: "android:transformPivotY"
        method: setPivotY(float)
        methodName: setPivotY
        type: float
        explanation: y location of the pivot point around which the view will rotate and scale. 
        from: android.view.View
    translationX: !java.util.LinkedHashMap
        name: "android:translationX"
        method: setTranslationX(float)
        methodName: setTranslationX
        type: float
        explanation: translation in x of the view. 
        from: android.view.View
    translationY: !java.util.LinkedHashMap
        name: "android:translationY"
        method: setTranslationY(float)
        methodName: setTranslationY
        type: float
        explanation: translation in y of the view. 
        from: android.view.View
    visibility: !java.util.LinkedHashMap
        name: "android:visibility"
        method: setVisibility(int)
        methodName: setVisibility
        type: int
        explanation: Controls the initial visibility of the view. 
        from: android.view.View
