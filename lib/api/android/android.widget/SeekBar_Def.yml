--- 
inherit: 
    - android.widget.AbsSeekBar
    - android.widget.ProgressBar
    - android.view.View
    - java.lang.Object
attributes: !java.util.LinkedHashMap
    animationResolution: !java.util.LinkedHashMap
        name: "android:animationResolution"
        method: ""
        methodName: ""
        type: int
        explanation: |
            Timeout between frames of animation in milliseconds
                          
            
            
                      Must be an integer value, such as "100". 
        from: android.widget.ProgressBar
    indeterminate: !java.util.LinkedHashMap
        name: "android:indeterminate"
        method: ""
        methodName: ""
        type: boolean
        explanation: Allows to enable the indeterminate mode. 
        from: android.widget.ProgressBar
    indeterminateBehavior: !java.util.LinkedHashMap
        name: "android:indeterminateBehavior"
        method: ""
        methodName: ""
        type: int
        explanation: |
            Defines how the indeterminate mode should behave when the progress
                    reaches max. 
        from: android.widget.ProgressBar
    indeterminateDrawable: !java.util.LinkedHashMap
        name: "android:indeterminateDrawable"
        method: ""
        methodName: ""
        type: String
        explanation: Drawable used for the indeterminate mode. 
        from: android.widget.ProgressBar
    indeterminateDuration: !java.util.LinkedHashMap
        name: "android:indeterminateDuration"
        method: ""
        methodName: ""
        type: boolean
        explanation: Duration of the indeterminate animation. 
        from: android.widget.ProgressBar
    indeterminateOnly: !java.util.LinkedHashMap
        name: "android:indeterminateOnly"
        method: ""
        methodName: ""
        type: boolean
        explanation: Restricts to ONLY indeterminate mode (state-keeping progress mode will not work). 
        from: android.widget.ProgressBar
    interpolator: !java.util.LinkedHashMap
        name: "android:interpolator"
        method: ""
        methodName: ""
        type: int
        explanation:  
        from: android.widget.ProgressBar
    max: !java.util.LinkedHashMap
        name: "android:max"
        method: ""
        methodName: ""
        type: int
        explanation: Defines the maximum value the progress can take. 
        from: android.widget.ProgressBar
    maxHeight: !java.util.LinkedHashMap
        name: "android:maxHeight"
        method: ""
        methodName: ""
        type: String
        explanation: An optional argument to supply a maximum height for this view. 
        from: android.widget.ProgressBar
    maxWidth: !java.util.LinkedHashMap
        name: "android:maxWidth"
        method: ""
        methodName: ""
        type: String
        explanation: An optional argument to supply a maximum width for this view. 
        from: android.widget.ProgressBar
    minHeight: !java.util.LinkedHashMap
        name: "android:minHeight"
        method: setMinimumHeight(int)
        methodName: setMinimumHeight
        type: int
        explanation: Defines the minimum height of the view. 
        from: android.view.View
    minWidth: !java.util.LinkedHashMap
        name: "android:minWidth"
        method: setMinimumWidth(int)
        methodName: setMinimumWidth
        type: int
        explanation: Defines the minimum width of the view. 
        from: android.view.View
    progress: !java.util.LinkedHashMap
        name: "android:progress"
        method: ""
        methodName: ""
        type: int
        explanation: "Defines the default progress value, between 0 and max. "
        from: android.widget.ProgressBar
    progressDrawable: !java.util.LinkedHashMap
        name: "android:progressDrawable"
        method: ""
        methodName: ""
        type: String
        explanation: Drawable used for the progress mode. 
        from: android.widget.ProgressBar
    secondaryProgress: !java.util.LinkedHashMap
        name: "android:secondaryProgress"
        method: ""
        methodName: ""
        type: int
        explanation: "Defines the secondary progress value, between 0 and max. "
        from: android.widget.ProgressBar
    alpha: !java.util.LinkedHashMap
        name: "android:alpha"
        method: setAlpha(float)
        methodName: setAlpha
        type: float
        explanation: |
            alpha property of the view, as a value between 0 (completely transparent) and 1
                         (completely opaque). 
        from: android.view.View
    background: !java.util.LinkedHashMap
        name: "android:background"
        method: setBackgroundResource(int)
        methodName: setBackgroundResource
        type: int
        explanation: A drawable to use as the background. 
        from: android.view.View
    clickable: !java.util.LinkedHashMap
        name: "android:clickable"
        method: setClickable(boolean)
        methodName: setClickable
        type: boolean
        explanation: Defines whether this view reacts to click events. 
        from: android.view.View
    contentDescription: !java.util.LinkedHashMap
        name: "android:contentDescription"
        method: setContentDescription(CharSequence)
        methodName: setContentDescription
        type: CharSequence
        explanation: Defines text that briefly describes content of the view. 
        from: android.view.View
    drawingCacheQuality: !java.util.LinkedHashMap
        name: "android:drawingCacheQuality"
        method: setDrawingCacheQuality(int)
        methodName: setDrawingCacheQuality
        type: int
        explanation: Defines the quality of translucent drawing caches. 
        from: android.view.View
    fadeScrollbars: !java.util.LinkedHashMap
        name: "android:fadeScrollbars"
        method: setScrollbarFadingEnabled(boolean)
        methodName: setScrollbarFadingEnabled
        type: boolean
        explanation: Defines whether to fade out scrollbars when they are not in use. 
        from: android.view.View
    filterTouchesWhenObscured: !java.util.LinkedHashMap
        name: "android:filterTouchesWhenObscured"
        method: setFilterTouchesWhenObscured(boolean)
        methodName: setFilterTouchesWhenObscured
        type: boolean
        explanation: |
            Specifies whether to filter touches when the view's window is obscured by
                         another visible window. 
        from: android.view.View
    fitsSystemWindows: !java.util.LinkedHashMap
        name: "android:fitsSystemWindows"
        method: setFitsSystemWindows(boolean)
        methodName: setFitsSystemWindows
        type: boolean
        explanation: |
            Boolean internal attribute to adjust view layout based on
                         system windows such as the status bar. 
        from: android.view.View
    focusable: !java.util.LinkedHashMap
        name: "android:focusable"
        method: setFocusable(boolean)
        methodName: setFocusable
        type: boolean
        explanation: Boolean that controls whether a view can take focus. 
        from: android.view.View
    focusableInTouchMode: !java.util.LinkedHashMap
        name: "android:focusableInTouchMode"
        method: setFocusableInTouchMode(boolean)
        methodName: setFocusableInTouchMode
        type: boolean
        explanation: Boolean that controls whether a view can take focus while in touch mode. 
        from: android.view.View
    hapticFeedbackEnabled: !java.util.LinkedHashMap
        name: "android:hapticFeedbackEnabled"
        method: setHapticFeedbackEnabled(boolean)
        methodName: setHapticFeedbackEnabled
        type: boolean
        explanation: |
            Boolean that controls whether a view should have haptic feedback
                         enabled for events such as long presses. 
        from: android.view.View
    id: !java.util.LinkedHashMap
        name: "android:id"
        method: setId(int)
        methodName: setId
        type: int
        explanation: |
            Supply an identifier name for this view, to later retrieve it
                         with View.findViewById() or
                         Activity.findViewById(). 
        from: android.view.View
    importantForAccessibility: !java.util.LinkedHashMap
        name: "android:importantForAccessibility"
        method: setImportantForAccessibility(int)
        methodName: setImportantForAccessibility
        type: int
        explanation: |
            Controls how this View is important for accessibility which is if it fires
                         accessibility events and if it is reported to accessibility services that
                         query the screen. 
        from: android.view.View
    isScrollContainer: !java.util.LinkedHashMap
        name: "android:isScrollContainer"
        method: setScrollContainer(boolean)
        methodName: setScrollContainer
        type: boolean
        explanation: |
            Set this if the view will serve as a scrolling container, meaing
                         that it can be resized to shrink its overall window so that there
                         will be space for an input method. 
        from: android.view.View
    keepScreenOn: !java.util.LinkedHashMap
        name: "android:keepScreenOn"
        method: setKeepScreenOn(boolean)
        methodName: setKeepScreenOn
        type: boolean
        explanation: |
            Controls whether the view's window should keep the screen on
                         while visible. 
        from: android.view.View
    layerType: !java.util.LinkedHashMap
        name: "android:layerType"
        method: "setLayerType(int,Paint)"
        methodName: setLayerType
        type: "int,Paint"
        explanation: Specifies the type of layer backing this view. 
        from: android.view.View
    layoutDirection: !java.util.LinkedHashMap
        name: "android:layoutDirection"
        method: setLayoutDirection(int)
        methodName: setLayoutDirection
        type: int
        explanation: Defines the direction of layout drawing. 
        from: android.view.View
    longClickable: !java.util.LinkedHashMap
        name: "android:longClickable"
        method: setLongClickable(boolean)
        methodName: setLongClickable
        type: boolean
        explanation: Defines whether this view reacts to long click events. 
        from: android.view.View
    nextFocusDown: !java.util.LinkedHashMap
        name: "android:nextFocusDown"
        method: setNextFocusDownId(int)
        methodName: setNextFocusDownId
        type: int
        explanation: |
            Defines the next view to give focus to when the next focus is
                         FOCUS_DOWN
            
                         If the reference refers to a view that does not exist or is part
                         of a hierarchy that is invisible, a RuntimeException
                         will result when the reference is accessed. 
        from: android.view.View
    nextFocusForward: !java.util.LinkedHashMap
        name: "android:nextFocusForward"
        method: setNextFocusForwardId(int)
        methodName: setNextFocusForwardId
        type: int
        explanation: |
            Defines the next view to give focus to when the next focus is
                         FOCUS_FORWARD
            
                         If the reference refers to a view that does not exist or is part
                         of a hierarchy that is invisible, a RuntimeException
                         will result when the reference is accessed. 
        from: android.view.View
    nextFocusLeft: !java.util.LinkedHashMap
        name: "android:nextFocusLeft"
        method: setNextFocusLeftId(int)
        methodName: setNextFocusLeftId
        type: int
        explanation: |
            Defines the next view to give focus to when the next focus is
                         FOCUS_LEFT. 
        from: android.view.View
    nextFocusRight: !java.util.LinkedHashMap
        name: "android:nextFocusRight"
        method: setNextFocusRightId(int)
        methodName: setNextFocusRightId
        type: int
        explanation: |
            Defines the next view to give focus to when the next focus is
                         FOCUS_RIGHT
            
                         If the reference refers to a view that does not exist or is part
                         of a hierarchy that is invisible, a RuntimeException
                         will result when the reference is accessed. 
        from: android.view.View
    nextFocusUp: !java.util.LinkedHashMap
        name: "android:nextFocusUp"
        method: setNextFocusUpId(int)
        methodName: setNextFocusUpId
        type: int
        explanation: |
            Defines the next view to give focus to when the next focus is
                         FOCUS_UP
            
                         If the reference refers to a view that does not exist or is part
                         of a hierarchy that is invisible, a RuntimeException
                         will result when the reference is accessed. 
        from: android.view.View
    padding: !java.util.LinkedHashMap
        name: "android:padding"
        method: "setPaddingRelative(int,int,int,int)"
        methodName: setPaddingRelative
        type: "int,int,int,int"
        explanation: "Sets the padding, in pixels, of all four edges. "
        from: android.view.View
    paddingBottom: !java.util.LinkedHashMap
        name: "android:paddingBottom"
        method: "setPaddingRelative(int,int,int,int)"
        methodName: setPaddingRelative
        type: "int,int,int,int"
        explanation: "Sets the padding, in pixels, of the bottom edge; see padding. "
        from: android.view.View
    paddingEnd: !java.util.LinkedHashMap
        name: "android:paddingEnd"
        method: "setPaddingRelative(int,int,int,int)"
        methodName: setPaddingRelative
        type: "int,int,int,int"
        explanation: "Sets the padding, in pixels, of the end edge; see padding. "
        from: android.view.View
    paddingLeft: !java.util.LinkedHashMap
        name: "android:paddingLeft"
        method: "setPadding(int,int,int,int)"
        methodName: setPadding
        type: "int,int,int,int"
        explanation: "Sets the padding, in pixels, of the left edge; see padding. "
        from: android.view.View
    paddingRight: !java.util.LinkedHashMap
        name: "android:paddingRight"
        method: "setPadding(int,int,int,int)"
        methodName: setPadding
        type: "int,int,int,int"
        explanation: "Sets the padding, in pixels, of the right edge; see padding. "
        from: android.view.View
    paddingStart: !java.util.LinkedHashMap
        name: "android:paddingStart"
        method: "setPaddingRelative(int,int,int,int)"
        methodName: setPaddingRelative
        type: "int,int,int,int"
        explanation: "Sets the padding, in pixels, of the start edge; see padding. "
        from: android.view.View
    paddingTop: !java.util.LinkedHashMap
        name: "android:paddingTop"
        method: "setPaddingRelative(int,int,int,int)"
        methodName: setPaddingRelative
        type: "int,int,int,int"
        explanation: "Sets the padding, in pixels, of the top edge; see padding. "
        from: android.view.View
    requiresFadingEdge: !java.util.LinkedHashMap
        name: "android:requiresFadingEdge"
        method: setVerticalFadingEdgeEnabled(boolean)
        methodName: setVerticalFadingEdgeEnabled
        type: boolean
        explanation: Defines which edges should be faded on scrolling. 
        from: android.view.View
    rotation: !java.util.LinkedHashMap
        name: "android:rotation"
        method: setRotation(float)
        methodName: setRotation
        type: float
        explanation: "rotation of the view, in degrees. "
        from: android.view.View
    rotationX: !java.util.LinkedHashMap
        name: "android:rotationX"
        method: setRotationX(float)
        methodName: setRotationX
        type: float
        explanation: "rotation of the view around the x axis, in degrees. "
        from: android.view.View
    rotationY: !java.util.LinkedHashMap
        name: "android:rotationY"
        method: setRotationY(float)
        methodName: setRotationY
        type: float
        explanation: "rotation of the view around the y axis, in degrees. "
        from: android.view.View
    saveEnabled: !java.util.LinkedHashMap
        name: "android:saveEnabled"
        method: setSaveEnabled(boolean)
        methodName: setSaveEnabled
        type: boolean
        explanation: |
            If unset, no state will be saved for this view when it is being
                         frozen. 
        from: android.view.View
    scaleX: !java.util.LinkedHashMap
        name: "android:scaleX"
        method: setScaleX(float)
        methodName: setScaleX
        type: float
        explanation: scale of the view in the x direction. 
        from: android.view.View
    scaleY: !java.util.LinkedHashMap
        name: "android:scaleY"
        method: setScaleY(float)
        methodName: setScaleY
        type: float
        explanation: scale of the view in the y direction. 
        from: android.view.View
    scrollbarDefaultDelayBeforeFade: !java.util.LinkedHashMap
        name: "android:scrollbarDefaultDelayBeforeFade"
        method: setScrollBarDefaultDelayBeforeFade(int)
        methodName: setScrollBarDefaultDelayBeforeFade
        type: int
        explanation: Defines the delay in milliseconds that a scrollbar waits before fade out. 
        from: android.view.View
    scrollbarFadeDuration: !java.util.LinkedHashMap
        name: "android:scrollbarFadeDuration"
        method: setScrollBarFadeDuration(int)
        methodName: setScrollBarFadeDuration
        type: int
        explanation: Defines the delay in milliseconds that a scrollbar takes to fade out. 
        from: android.view.View
    scrollbarSize: !java.util.LinkedHashMap
        name: "android:scrollbarSize"
        method: setScrollBarSize(int)
        methodName: setScrollBarSize
        type: int
        explanation: Sets the width of vertical scrollbars and height of horizontal scrollbars. 
        from: android.view.View
    scrollbarStyle: !java.util.LinkedHashMap
        name: "android:scrollbarStyle"
        method: setScrollBarStyle(int)
        methodName: setScrollBarStyle
        type: int
        explanation: Controls the scrollbar style and position. 
        from: android.view.View
    soundEffectsEnabled: !java.util.LinkedHashMap
        name: "android:soundEffectsEnabled"
        method: setSoundEffectsEnabled(boolean)
        methodName: setSoundEffectsEnabled
        type: boolean
        explanation: |
            Boolean that controls whether a view should have sound effects
                         enabled for events such as clicking and touching. 
        from: android.view.View
    textAlignment: !java.util.LinkedHashMap
        name: "android:textAlignment"
        method: setTextAlignment(int)
        methodName: setTextAlignment
        type: int
        explanation: Alignment of the text. 
        from: android.view.View
    transformPivotX: !java.util.LinkedHashMap
        name: "android:transformPivotX"
        method: setPivotX(float)
        methodName: setPivotX
        type: float
        explanation: x location of the pivot point around which the view will rotate and scale. 
        from: android.view.View
    transformPivotY: !java.util.LinkedHashMap
        name: "android:transformPivotY"
        method: setPivotY(float)
        methodName: setPivotY
        type: float
        explanation: y location of the pivot point around which the view will rotate and scale. 
        from: android.view.View
    translationX: !java.util.LinkedHashMap
        name: "android:translationX"
        method: setTranslationX(float)
        methodName: setTranslationX
        type: float
        explanation: translation in x of the view. 
        from: android.view.View
    translationY: !java.util.LinkedHashMap
        name: "android:translationY"
        method: setTranslationY(float)
        methodName: setTranslationY
        type: float
        explanation: translation in y of the view. 
        from: android.view.View
    visibility: !java.util.LinkedHashMap
        name: "android:visibility"
        method: setVisibility(int)
        methodName: setVisibility
        type: int
        explanation: Controls the initial visibility of the view. 
        from: android.view.View
