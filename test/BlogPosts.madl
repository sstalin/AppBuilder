
class Item {
  String title
  String author 
  String body
  Date   creationTime

  List<Item> comments = []

  boolean isValid() { ... }
}

app('Blog Post') { 

  ListView(id: s1, title: 'Topics') { 
	def items = ListEntity(class: Item)
	items.values = [   // ...
	]
	
	items.each { t ->
	  Item(text: t.name,
		   detailText: "${t.author}, ${t.creationTime}",
		   menu: [
			 [ text: 'Add new post', next: s2 ]
			 [ text: 'Select post', next: [ to: s3, data: t ] ]
		   ]
		  )
	}
  }

  View(id: s2, title: 'New Post') { 
	Table { 
	  Row { 
		Label 'Title'
		Text(id: 'title', prompt: 'enter title')
	  }
	  Row(height='*') { 
		Label 'Body'
		Text(id: 'body', prompt: 'enter body')
	  }
	  Row(align='right') { 
		Button(text: 'Save', next: s1, action: { 
				 Item post = new Item(title: title.text, body: body.text)
				 if (post.isValid()) s1.items.add(post)
			   })
		Button(text: 'Cancel', next: s1)
	  }
	}
  }


  View(id: s3, title: 'Post') { 
	Table { 
	  Row { 
		Label 'Title'
		Label data.title
	  }
	  Row(height='*') { 
		Label 'Body'
		Lable data.body
	  }
	  Row(align='right') { 
		Button(text: 'Add comment', next: [ to: s4, data: data ]) 
	  }
	}
  }

  View(id: s4, title: 'New Comment') { 
	Table { 
	  Row { 
		Label 'Title'
		Text data.title
	  }
	  Row(height='*') { 
		Label 'Comment'
		Text(id: 'comment', prompt: 'enter comment')
	  }
	  Row(align='right') { 
		Button(text: 'Save', next: s3, action: { 
				 Item comment = new Item(title: title.text, body: comment.text)
				 if (comment.isValid()) data.comments.add(comment)
			   })
		Button(text: 'Cancel', next: s3)
	  }
	}	
  }

}